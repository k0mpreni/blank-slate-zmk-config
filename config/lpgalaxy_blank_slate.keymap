/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY_BASE 1

#define TBLE_ORTHO   1
// #define TBLE_MIT     1
// #define TBLE_DUAL_2U 1

#define SYM_L 1
#define NUM_L 2
#define NAV_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

#define BT(n) BT_SEL n

/ {
    chosen {
       zmk,physical-layout = &layout_ortho_4x12_all1u;
    };

    macros {
      ZMK_MACRO(thumbs_up,
		wait-ms = <1>;
		tap-ms = <5>;
                bindings = <&kp PLUS &kp COLON &kp PLUS &kp N1 &kp COLON &kp RET>;
		)
    };
    
    tap_dances {
    	shifty: shift_caps_word {
		compatible = "zmk,behavior-tap-dance";
		label = "TD_SHIFTY";
		#binding-cells = <0>;
		tapping-term-ms = <150>;
		bindings = <&kp LSHFT>, <&caps_word>;
	};
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
 &kp ESC    &kp Q            &kp W      &kp E       &kp R          &kp T          &kp Y            &kp U          &kp I       &kp O      &kp P         &kp BKSP
 &kp TAB    &kp A            &kp S      &kp D       &kp F          &kp G          &kp H            &kp J          &kp K       &kp L      &kp SEMI      &kp QUOT
 &kp LSHFT  &kp Z      	     &kp X      &kp C       &kp V          &kp B          &kp N            &kp M          &kp COMMA   &kp DOT    &kp FSLH      &kp RET
 &kp LCTRL  &none &kp LALT   &kp LGUI    &mo SYM_L      &kp SPACE      &kp RET          &mo NUM_L      &kp RGUI    &none     &none      &tog NAV_L
            >;
        };
        sym_layer {
            label = "Sym";
            bindings = <
&kp TILDE  &kp EXCL   &kp AT     &kp HASH    &kp DLLR     &kp PRCNT    &kp CARET     &kp AMPS    &kp ASTRK       &kp PLUS       &trans     &bootloader
&kp TAB    &kp DQT    &kp LBKT   &kp LBRC    &kp LPAR     &kp MINUS    &kp EQUAL     &kp RPAR    &kp LBRC        &kp RBKT       &kp SQT    &kp DEL
&kp LT     &kp GRAVE  &kp SLASH  &none       &kp UNDER    &kp PIPE     &trans        &trans      &kp PLUS        &kp BSLH       &trans     &kp GT
&trans     &trans     &trans     &kp RPAR    &trans       &trans       &trans        &trans      &trans          &trans         &trans     &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
&kp N0     &kp N1     &kp N2 	&kp N3 	&trans    &trans   &trans    &trans     &kp UP      &trans       &trans     &kp BKSP
&kp TAB    &kp N4     &kp N5 	&kp N6	&trans    &trans   &trans    &kp LEFT   &trans      &kp RIGHT    &trans     &trans
&trans     &kp N7     &kp N8 	&kp N9	&trans    &trans   &trans    &trans     &kp DOWN    &trans       &trans     &trans
&trans     &trans     &trans    &kp N0  &trans    &none    &none     &trans     &trans      &trans 	 &trans     &trans
            >;
        };
        nav_layer {
            label = "Nav";
            bindings = <
&kp C_VOL_DN 	&trans     	&trans     &trans      &kp C_PAUSE     &trans       &trans    &trans    &trans      &trans    	&trans     &kp C_VOL_UP
&trans		&trans     	&trans     &trans      &trans          &trans       &trans    &kp LEFT  &kp DOWN    &kp UP    	&kp RIGHT  &trans
&trans		&bt BT(0)  	&bt BT(1)  &bt BT(2)   &bt BT(3)       &bt BT(4)    &trans    &kp HOME  &kp PG_DN   &kp PG_UP	&kp END    &trans
&trans		&trans		&trans     &trans      &trans          &trans       &trans    &trans  	&trans      &trans 	&trans 	   &tog NAV_L
            >;
        };


    };
};

